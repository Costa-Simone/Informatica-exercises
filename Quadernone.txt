------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//input
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
do
{
   Console.Write("Inserire numero di bit: ");
   if (!int.TryParse(Console.ReadLine(), out n))
   {
      Console.WriteLine("Inserire numero intero: ");
      n = -1;
   }
} while (n <= 0);
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//potenze
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
nf += Math.Pow(Convert.ToDouble(2), Convert.ToDouble(i));
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
colori testo
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Console.ForegroundColor = ConsoleColor.Green;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
somma1 = 1;

for (int i = 2; i <= n1 / 2; i++)
{
  if (n1 % i == 0)
  {
    somma1 += i;
  }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
if ridotto
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
v = (condizione) ? t : f;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sottoprogramma prodottoVettoriale
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
static void prodottoVett(int[] a, int[] b, int[] c, int n)
{
	for (int i = 0; i < n; i++)
	{
  	c[i] = a[i] * b[i];
	}
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sottoprogramma caricaVettore
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
static void caricaVett(int[] v, int n)
{
  for (int i = 0; i < n; i++)
  {
    v[i] = rnd.Next(1, 11);
  }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sottoprogramma stampaVettore
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
static void stampaVett(int[] v, int n)
{
   for (int i = 0; i < n; i++)
   {
      Console.WriteLine("Il " + i.ToString() + "^ del vettore Ã©: " + v[i].ToString());
   }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
pausa programma
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
System.Threading.Thread.Sleep(1000);
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

            Console.WriteLine("\n\n(premi un tasto per continuare)");
            Console.ReadKey();
        }
        private static int inputDimensione()
        {
            int n;

            do
            {
                Console.Write("\nInserire lunghezza del vettore: ");
                if (!int.TryParse(Console.ReadLine(), out n))
                {
                    Console.WriteLine("Inserire numero intero: ");
                    n = -1;
                }
            } while (n <= 0);

            return n;
        }
        static void caricaVett(int[] v)
        {
            for (int i = 0; i < v.Length; i++)
            {
                v[i] = rnd.Next(1, 11);
            }
        }
        static void stampaVett(int[] v, string name)
        {
            Console.WriteLine("\n" + name + ":");
            for (int i = 0; i < v.Length; i++)
            {
                Console.Write(v[i].ToString().PadRight(6));
            }
        }
        private static int cercaMax()
        {
            Console.Clear();
            int[] a;
            int n = inputDimensione(), massimo = int.MinValue;

            a = new int[n];

            caricaVett(a);
            stampaVett(a, "Stampa vettore a");

            for (int i = 0; i < n; i++)
            {
                if (a[i] > massimo)
                {
                    massimo = a[i];
                }
            }

            return massimo;
        }